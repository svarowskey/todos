{"version":3,"sources":["firebase.js","api.js","context/db.js","components/AppDrawer/index.jsx","components/AppContent/index.jsx","components/TodoListItem/index.jsx","components/TodoList/index.jsx","components/TodoForm/index.jsx","pages/TodoList.jsx","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","getLists","collection","get","then","snapshot","docs","map","doc","id","data","catch","error","console","log","getListTodos","listId","where","createTodo","add","completed","docRef","deleteTodo","todoId","delete","createContext","todos","lists","AppDrawer","title","icon","to","item","component","NavLink","key","element","AppContent","props","TodoListItem","todo","onCompleteChange","onDelete","className","checked","onChange","onClick","TodoList","list","variant","TodoForm","onSubmit","useState","setTitle","event","preventDefault","label","value","e","target","type","fullWidth","TodoListPage","match","useContext","DBContext","setTodos","useEffect","params","find","filter","t","App","setLists","api","Provider","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8333b8d3.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAlCUEfDYTdnaYoOtIQ-o8cU0bSigjWk1k\",\r\n    authDomain: \"react-todo-4649a.firebaseapp.com\",\r\n    databaseURL: \"https://react-todo-4649a.firebaseio.com\",\r\n    projectId: \"react-todo-4649a\",\r\n    storageBucket: \"react-todo-4649a.appspot.com\",\r\n    messagingSenderId: \"930484674768\",\r\n    appId: \"1:930484674768:web:1540fda55156b6052c3ed5\"\r\n  };\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nexport { db };\r\n","import { db } from './firebase';\r\n\r\nexport function getLists() {\r\n    return db.collection('lists')\r\n    .get()\r\n    .then(snapshot => {\r\n        const items = snapshot.docs.map(doc => (\r\n        {\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n\r\n        return items;\r\n    })\r\n    .catch(error => {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n}\r\n\r\nexport function getListTodos(listId) {\r\n    return db.collection('todos')\r\n    .where('listId', '==', listId)\r\n    .get()\r\n    .then(snapshot => {\r\n        const items = snapshot.docs.map(doc => (\r\n        {\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n\r\n        return items;\r\n    })\r\n    .catch(error => {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n}\r\n\r\nexport function createTodo(data) {\r\n    return db.collection('todos').add({\r\n        ...data,\r\n        completed: false\r\n    })\r\n    .then(docRef => docRef.get())\r\n    .then(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n    }));\r\n}\r\n\r\nexport function deleteTodo(todoId) {\r\n    return db.collection('todos').doc(todoId).delete()\r\n        .then(() => todoId);\r\n}\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext({ todos: [], lists: []});\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { \r\n    Drawer, DrawerHeader, DrawerContent,\r\n    Icon,\r\n    List, ListItem, ListItemGraphic, ListItemText ,\r\n    ListGroup, ListDivider\r\n} from 'mdc-react';\r\n\r\nexport default function AppDrawer({ lists }) {\r\n    return(\r\n        <Drawer\r\n            id=\"app-drawer\"\r\n        >\r\n            <DrawerHeader \r\n                title=\"React Todo\"\r\n            />\r\n\r\n            <DrawerContent>\r\n                <ListGroup>\r\n                    <List>\r\n                        {[\r\n                            { title: 'Задачи', icon: 'home', to: \"/\" },\r\n                            { title: 'Важно', icon: 'star', to: '/important' },\r\n                            { title: 'Запланированные', icon: 'event', to: \"/planned\" }\r\n                        ].map(item=> \r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={item.to}\r\n                                key={item.icon}\r\n                            >\r\n                                <ListItemGraphic>\r\n                                    <Icon>{ item.icon }</Icon>\r\n                                </ListItemGraphic>\r\n\r\n                                <ListItemText>\r\n                                    { item.title }\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            )}\r\n                    </List>\r\n                    \r\n                    <ListDivider element=\"hr\" />\r\n\r\n                    <List>\r\n                        {lists.map(item=> \r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={item.id}\r\n                                key={item.key}\r\n                            >\r\n                                <ListItemGraphic>\r\n                                    <Icon>list</Icon>\r\n                                </ListItemGraphic>\r\n\r\n                                <ListItemText>\r\n                                    { item.title }\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            )}\r\n                    </List>\r\n                </ListGroup>\r\n            </DrawerContent>\r\n        </Drawer>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function AppContent({ ...props }) {\r\n    return(\r\n        <main id=\"app-content\" {...props} />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Checkbox, Icon, IconButton,\r\n    ListItem, ListItemGraphic, ListItemText, ListItemMeta\r\n} from 'mdc-react';\r\n\r\nimport 'components/TodoListItem/index.scss';\r\n\r\nexport default function TodoListItem({\r\n    todo, \r\n    onCompleteChange,\r\n    onDelete\r\n }) {\r\n    return (\r\n        <ListItem className=\"todo-list-item\">\r\n            <ListItemGraphic>\r\n                <Checkbox \r\n                    checked={todo.completed}\r\n                    onChange={onCompleteChange}\r\n                />\r\n            </ListItemGraphic>\r\n\r\n            <ListItemText>{todo.title}</ListItemText>\r\n\r\n            <ListItemMeta>\r\n                <IconButton onClick={() => onDelete(todo.id)}>\r\n                    <Icon>delete</Icon>\r\n                </IconButton>\r\n            </ListItemMeta>\r\n        </ListItem>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    List, Typography\r\n} from 'mdc-react';\r\n\r\nimport TodoListItem from 'components/TodoListItem';\r\nimport 'components/TodoList/index.scss';\r\n\r\nexport default function TodoList({ list, todos, onDelete }) {\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <Typography className=\"todo-list__title\"\r\n            variant=\"headline4\">{list.title}</Typography>\r\n            \r\n            <List className=\"todo-list\">\r\n                {todos.map(todo =>\r\n                    <TodoListItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        onDelete={onDelete}\r\n                    />\r\n                )}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n    List, ListItem,\r\n    TextField\r\n} from 'mdc-react';\r\n\r\nimport 'components/TodoForm/index.scss';\r\n\r\nexport default function TodoForm({ onSubmit }) {\r\n    const [title, setTitle] = useState('');\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        // console.log(title);\r\n        onSubmit(title);\r\n        setTitle('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"todo-form\">\r\n            <List>\r\n                <ListItem>\r\n                    <TextField \r\n                        label=\"Что нужно сделать...\"\r\n                        value={title}\r\n                        onChange={e => setTitle(e.target.value)}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                </ListItem>\r\n            </List>\r\n        </form>\r\n    );\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport DBContext from 'context/db';\r\nimport TodoList from 'components/TodoList';\r\nimport TodoForm from 'components/TodoForm';\r\nimport 'pages/index.scss';\r\n\r\nexport default function TodoListPage({ match }) {\r\n    const db = useContext(DBContext);\r\n    const [todos, setTodos] = useState([]);\r\n \r\n    useEffect(() => {\r\n\r\n        db.getListTodos(match.params.listId).then(setTodos);\r\n    }, [db, match.params.listId]);\r\n\r\n    const list = db.lists.find(list => list.id === match.params.listId);\r\n    \r\n    function handleSubmit(title) {\r\n        db.createTodo({\r\n            title,\r\n            listId: list.id\r\n        }).then(todo => {\r\n            setTodos([...todos, todo])\r\n        });\r\n    }\r\n\r\n    function handleDelete(todoId) {\r\n        db.deleteTodo(todoId)\r\n        .then(todoId => {\r\n            setTodos([...todos.filter(t => t.id !== todoId)])\r\n        });\r\n    }\r\n\r\n    if (typeof list !== 'object') return \"\";\r\n\r\n    return (\r\n        <div id=\"todo-list-page\" className=\"page\">\r\n            <TodoList \r\n                list={list}\r\n                todos={todos}\r\n                onDelete={handleDelete}\r\n            />\r\n\r\n            <TodoForm \r\n                onSubmit={handleSubmit}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport * as api from 'api';\nimport DBContext from 'context/db';\nimport AppDrawer from 'components/AppDrawer';\nimport AppContent from 'components/AppContent';\nimport TodoList from 'pages/TodoList'\n\nimport 'App.scss';\n\nexport default function App() {\n  const [lists, setLists] = useState([]);\n\n  useEffect(() => {\n    api.getLists().then(setLists);\n  }, []);\n\n  return (\n    <DBContext.Provider value={{ lists, ...api }}>\n      <div className=\"app\">\n        <AppDrawer \n          lists={lists}\n        />\n\n        <AppContent>\n          <Switch>\n            <Route path=\"/todos/:listId\" component={TodoList}/>\n            <Route path=\"/:listId\" component={TodoList}/>\n          </Switch>\n        </AppContent>\n      </div>\n    </DBContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'index.scss';\nimport App from 'App.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}