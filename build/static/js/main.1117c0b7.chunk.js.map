{"version":3,"sources":["firebase.js","api.js","hooks/api.js","components/AppDrawer/index.jsx","components/AppContent/index.jsx","components/TodoListItem/index.jsx","components/TodoList/index.jsx","components/TodoForm/index.jsx","pages/TodoList.jsx","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","getLists","collection","get","then","snapshot","docs","map","doc","id","data","catch","error","console","log","useApi","useState","todos","setTodos","lists","setLists","useEffect","api","actions","getListTodos","listId","where","createTodo","add","completed","docRef","todo","updateTodo","todoId","update","t","deleteTodo","delete","filter","AppDrawer","title","icon","to","item","component","NavLink","key","element","AppContent","props","TodoListItem","onUpdate","onDelete","className","checked","onChange","e","a","onClick","TodoList","list","variant","TodoForm","onSubmit","setTitle","focusClass","setFocusClass","textInput","React","createRef","event","preventDefault","ref","label","value","target","onFocus","onBlur","type","fullWidth","TodoListPage","match","params","find","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1117c0b7.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAlCUEfDYTdnaYoOtIQ-o8cU0bSigjWk1k\",\r\n    authDomain: \"react-todo-4649a.firebaseapp.com\",\r\n    databaseURL: \"https://react-todo-4649a.firebaseio.com\",\r\n    projectId: \"react-todo-4649a\",\r\n    storageBucket: \"react-todo-4649a.appspot.com\",\r\n    messagingSenderId: \"930484674768\",\r\n    appId: \"1:930484674768:web:1540fda55156b6052c3ed5\"\r\n  };\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nexport { db };\r\n","import { db } from './firebase';\r\n\r\nexport function getLists() {\r\n    return db.collection('lists')\r\n    .get()\r\n    .then(snapshot => {\r\n        const items = snapshot.docs.map(doc => (\r\n        {\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n\r\n        return items;\r\n    })\r\n    .catch(error => {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n}\r\n\r\nexport function getListTodos(listId) {\r\n    return db.collection('todos')\r\n    .where('listId', '==', listId)\r\n    .get()\r\n    .then(snapshot => {\r\n        const items = snapshot.docs.map(doc => (\r\n        {\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n\r\n        return items;\r\n    })\r\n    .catch(error => {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n}\r\n\r\nexport function createTodo(data) {\r\n    return db.collection('todos').add({\r\n        ...data,\r\n        completed: false\r\n    })\r\n    .then(docRef => docRef.get())\r\n    .then(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n    }));\r\n}\r\n\r\nexport function updateTodo(todoId, data) {\r\n    return db.collection('todos').doc(todoId).update(data);\r\n}\r\n\r\nexport function deleteTodo(todoId) {\r\n    return db.collection('todos').doc(todoId).delete()\r\n        .then(() => todoId);\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport * as api from 'api';\r\n\r\nexport default function useApi() {\r\n    const [todos, setTodos] = useState([]);\r\n    const [lists, setLists] = useState([]);\r\n\r\n    useEffect(() => {\r\n        api.getLists().then(setLists);\r\n    }, []);\r\n\r\n    function getLists() {\r\n        return api.getLists()\r\n        .then(setLists);\r\n    }\r\n\r\n    function getListTodos(listId) {\r\n        return api.getListTodos(listId)\r\n        .then(setTodos);\r\n    }\r\n\r\n    function createTodo(data) {\r\n        return api.createTodo(data)\r\n        .then(todo => setTodos([...todos, todo]));\r\n    }\r\n\r\n    function updateTodo(todoId, data) {\r\n        return api.updateTodo(todoId, data)\r\n            .then(data => {\r\n                setTodos([...todos.map(t => t.id !==\r\n                    todoId ? ({ ...t, ...data, }) : t)]);\r\n            });\r\n        // console.log(data);\r\n    }\r\n\r\n    function deleteTodo(todoId) {\r\n        return api.deleteTodo(todoId)\r\n        .then(todoId => {\r\n            setTodos([...todos.filter(t => t.id !== todoId)])\r\n        });\r\n    }\r\n\r\n    return {\r\n        data: {\r\n            lists,\r\n            todos,\r\n        },\r\n        actions: {\r\n            getLists,\r\n            getListTodos,\r\n            createTodo,\r\n            updateTodo,\r\n            deleteTodo,\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { \r\n    Drawer, DrawerHeader, DrawerContent,\r\n    Icon,\r\n    List, ListItem, ListItemGraphic, ListItemText ,\r\n    ListGroup, ListDivider\r\n} from 'mdc-react';\r\n\r\nexport default function AppDrawer({ lists }) {\r\n    return(\r\n        <Drawer\r\n            id=\"app-drawer\"\r\n        >\r\n            <DrawerHeader \r\n                title=\"React Todo\"\r\n            />\r\n\r\n            <DrawerContent>\r\n                <ListGroup>\r\n                    <List>\r\n                        {[\r\n                            { title: 'Задачи', icon: 'home', to: \"/\" },\r\n                            { title: 'Важно', icon: 'star', to: '/important' },\r\n                            { title: 'Запланированные', icon: 'event', to: \"/planned\" }\r\n                        ].map(item=> \r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={item.to}\r\n                                key={item.icon}\r\n                            >\r\n                                <ListItemGraphic>\r\n                                    <Icon>{ item.icon }</Icon>\r\n                                </ListItemGraphic>\r\n\r\n                                <ListItemText>\r\n                                    { item.title }\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            )}\r\n                    </List>\r\n                    \r\n                    <ListDivider element=\"hr\" />\r\n\r\n                    <List>\r\n                        {lists.map(item=> \r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={item.id}\r\n                                key={item.key}\r\n                            >\r\n                                <ListItemGraphic>\r\n                                    <Icon>list</Icon>\r\n                                </ListItemGraphic>\r\n\r\n                                <ListItemText>\r\n                                    { item.title }\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            )}\r\n                    </List>\r\n                </ListGroup>\r\n            </DrawerContent>\r\n        </Drawer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport 'components/AppContent/index.scss';\r\n\r\nexport default function AppContent({ ...props }) {\r\n    return(\r\n        <main id=\"app-content\" {...props} />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Checkbox, Icon, IconButton,\r\n    ListItem, ListItemGraphic, ListItemText, ListItemMeta\r\n} from 'mdc-react';\r\n\r\nimport 'components/TodoListItem/index.scss';\r\n\r\nexport default function TodoListItem({\r\n    todo, \r\n    onUpdate,\r\n    onDelete\r\n }) {\r\n    function handleChange(completed, e, a) {\r\n        onUpdate(todo.id, {\r\n            ...todo,\r\n            completed: e,\r\n        });\r\n        // console.log(completed);\r\n        // console.log(e);\r\n        // console.log(a);\r\n    }\r\n\r\n    return (\r\n        <ListItem className=\"todo-list-item\">\r\n            <ListItemGraphic>\r\n                <Checkbox \r\n                    checked={todo.completed}\r\n                    onChange={handleChange}\r\n                />\r\n            </ListItemGraphic>\r\n\r\n            <ListItemText>{todo.title}</ListItemText>\r\n\r\n            <ListItemMeta>\r\n                <IconButton onClick={() => onDelete(todo.id)}>\r\n                    <Icon>delete</Icon>\r\n                </IconButton>\r\n            </ListItemMeta>\r\n        </ListItem>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    List, Typography\r\n} from 'mdc-react';\r\n\r\nimport TodoListItem from 'components/TodoListItem';\r\nimport 'components/TodoList/index.scss';\r\n\r\nexport default function TodoList({\r\n    list,\r\n    todos,\r\n    onUpdate,\r\n    onDelete,\r\n}) {\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <Typography className=\"todo-list__title\"\r\n            variant=\"headline4\">{list.title}</Typography>\r\n            \r\n            <List className=\"todo-list\">\r\n                {todos.map(todo =>\r\n                    <TodoListItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        onUpdate={onUpdate}\r\n                        onDelete={onDelete}\r\n                    />\r\n                )}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n    List, ListItem,\r\n    TextField\r\n} from 'mdc-react';\r\n\r\nimport 'components/TodoForm/index.scss';\r\n\r\nexport default function TodoForm({ onSubmit }) {\r\n    const [title, setTitle] = useState('');\r\n    const [focusClass, setFocusClass] = useState('');\r\n    const textInput = React.createRef();\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        // console.log(title);\r\n        onSubmit(title);\r\n        setTitle('');\r\n    }\r\n\r\n    function handleFocus(event) {\r\n         if (focusClass === \"\") {\r\n             setFocusClass('mdc-list-item--focus');\r\n         } else {\r\n             setFocusClass('');\r\n         }\r\n    }\r\n\r\n    function handleBlur(event) {\r\n        if (focusClass === \"\") {\r\n            setFocusClass('mdc-list-item--focus');\r\n        } else {\r\n            setFocusClass('');\r\n        }\r\n   }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"todo-form\">\r\n            <List>\r\n                <ListItem className={focusClass}>\r\n                    <TextField \r\n                        ref={textInput}\r\n                        label=\"Что нужно сделать...\"\r\n                        value={title}\r\n                        onChange={e => setTitle(e.target.value)}\r\n                        onFocus={handleFocus}\r\n                        onBlur={handleBlur}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                </ListItem>\r\n            </List>\r\n        </form>\r\n    );\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport useApi from 'hooks/api';\r\nimport TodoList from 'components/TodoList';\r\nimport TodoForm from 'components/TodoForm';\r\nimport 'pages/index.scss';\r\n\r\nexport default function TodoListPage({ match }) {\r\n    const { data: { lists, todos }, actions } = useApi();\r\n \r\n    useEffect(() => {\r\n        actions.getListTodos(match.params.listId);\r\n    }, [actions, match.params.listId]);\r\n    \r\n    function handleSubmit(title) {\r\n        actions.createTodo({\r\n            title,\r\n            listId: list.id\r\n        });\r\n    }\r\n\r\n    function handleDelete(todoId) {\r\n        actions.deleteTodo(todoId);\r\n    }\r\n\r\n    function handleUpdate(todoId, data) {\r\n        actions.updateTodo(todoId, data);\r\n    }\r\n\r\n    const list = lists.find(list => list.id === match.params.listId);\r\n\r\n    if (typeof list !== 'object') return \"\";\r\n\r\n    return (\r\n        <div id=\"todo-list-page\" className=\"page\">\r\n            <TodoList \r\n                list={list}\r\n                todos={todos}\r\n                onUpdate={handleUpdate}\r\n                onDelete={handleDelete}\r\n            />\r\n\r\n            <TodoForm \r\n                onSubmit={handleSubmit}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport useApi from 'hooks/api';\nimport AppDrawer from 'components/AppDrawer';\nimport AppContent from 'components/AppContent';\nimport TodoList from 'pages/TodoList'\n\nimport 'App.scss';\n\nexport default function App() {\n  const { data: { lists } } = useApi();\n\n  return (\n    <div className=\"app\">\n        <AppDrawer \n          lists={lists}\n        />\n\n        <AppContent>\n          <Switch>\n            <Route path=\"/todos/:listId\" component={TodoList}/>\n            <Route path=\"/:listId\" component={TodoList}/>\n          </Switch>\n        </AppContent>\n      </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'index.scss';\nimport App from 'App.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}