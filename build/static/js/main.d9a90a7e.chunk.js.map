{"version":3,"sources":["firebase.js","api.js","context/db.js","components/AppDrawer/index.jsx","components/AppContent/index.jsx","components/TodoListItem/index.jsx","components/TodoList/index.jsx","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","get","collectionName","collection","query","then","snapshot","docs","map","doc","id","data","catch","error","console","log","createContext","todos","lists","AppDrawer","title","icon","to","item","component","NavLink","key","element","AppContent","props","TodoListItem","todo","onCompleteChange","onStatusChange","checked","completed","onChange","TodoList","match","useState","setTodos","useContext","DBContext","useEffect","where","params","listId","list","find","className","variant","App","setLists","Provider","value","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9a90a7e.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAlCUEfDYTdnaYoOtIQ-o8cU0bSigjWk1k\",\r\n    authDomain: \"react-todo-4649a.firebaseapp.com\",\r\n    databaseURL: \"https://react-todo-4649a.firebaseio.com\",\r\n    projectId: \"react-todo-4649a\",\r\n    storageBucket: \"react-todo-4649a.appspot.com\",\r\n    messagingSenderId: \"930484674768\",\r\n    appId: \"1:930484674768:web:1540fda55156b6052c3ed5\"\r\n  };\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nexport { db };\r\n","import { db } from './firebase';\r\n\r\nexport function get(collectionName) {\r\n    const collection = db.collection(collectionName);\r\n\r\n    return (query = () => collection) => {\r\n        return query(collection)\r\n            .get()\r\n            .then(snapshot => {\r\n                const items = snapshot.docs.map(doc => (\r\n                {\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n\r\n                return items;\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n    };\r\n}\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext({ todos: [], lists: []});\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { \r\n    Drawer, DrawerHeader, DrawerContent,\r\n    Icon,\r\n    List, ListItem, ListItemGraphic, ListItemText ,\r\n    ListGroup, ListDivider\r\n} from 'mdc-react';\r\n\r\nexport default function AppDrawer({ lists }) {\r\n    return(\r\n        <Drawer\r\n            id=\"app-drawer\"\r\n        >\r\n            <DrawerHeader \r\n                title=\"React Todo\"\r\n            />\r\n\r\n            <DrawerContent>\r\n                <ListGroup>\r\n                    <List>\r\n                        {[\r\n                            { title: 'Задачи', icon: 'home', to: \"/\" },\r\n                            { title: 'Важно', icon: 'star', to: '/important' },\r\n                            { title: 'Запланированные', icon: 'event', to: \"/planned\" }\r\n                        ].map(item=> \r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={item.to}\r\n                                key={item.icon}\r\n                            >\r\n                                <ListItemGraphic>\r\n                                    <Icon>{ item.icon }</Icon>\r\n                                </ListItemGraphic>\r\n\r\n                                <ListItemText>\r\n                                    { item.title }\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            )}\r\n                    </List>\r\n                    \r\n                    <ListDivider element=\"hr\" />\r\n\r\n                    <List>\r\n                        {lists.map(item=> \r\n                            <ListItem\r\n                                component={NavLink}\r\n                                to={item.id}\r\n                                key={item.key}\r\n                            >\r\n                                <ListItemGraphic>\r\n                                    <Icon>list</Icon>\r\n                                </ListItemGraphic>\r\n\r\n                                <ListItemText>\r\n                                    { item.title }\r\n                                </ListItemText>\r\n                            </ListItem>\r\n                            )}\r\n                    </List>\r\n                </ListGroup>\r\n            </DrawerContent>\r\n        </Drawer>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function AppContent({ ...props }) {\r\n    return(\r\n        <main id=\"app-content\" {...props} />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Checkbox, ListItem, ListItemGraphic, ListItemText\r\n} from 'mdc-react';\r\n\r\nexport default function TodoListItem({ todo, onStatusChange: onCompleteChange }) {\r\n    return (\r\n        <ListItem>\r\n            <ListItemGraphic>\r\n                <Checkbox \r\n                    checked={todo.completed}\r\n                    onChange={onCompleteChange}\r\n                />\r\n            </ListItemGraphic>\r\n\r\n            <ListItemText>{todo.title}</ListItemText>\r\n        </ListItem>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n    List, Typography, Spinner\r\n} from 'mdc-react';\r\nimport DBContext from 'context/db';\r\nimport TodoListItem from 'components/TodoListItem';\r\nimport 'components/TodoList/index.scss';\r\n\r\nexport default function TodoList({ match }) {\r\n    const [todos, setTodos] = useState([]);\r\n    const db = useContext(DBContext);\r\n \r\n    console.log(match);\r\n    useEffect(() => {\r\n        db.get('todos')(collection =>\r\n            collection.where('listId', '==', match.params.listId)\r\n        ).then(setTodos);\r\n    }, [db, match.params.listId]);\r\n\r\n    const list = db.lists.find(list => list.id === match.params.listId);\r\n    \r\n    if (typeof list !== 'object') return \"\";\r\n\r\n    // if (!list) {\r\n    //     return <Spinner />\r\n    // }\r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <Typography className=\"todo-list__title\" variant=\"headline4\">{list.title}</Typography>\r\n            \r\n            <List className=\"todo-list__items\">\r\n                {todos.map(todo =>\r\n                    <TodoListItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                    />\r\n                )}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { get } from 'api';\nimport DBContext from 'context/db';\nimport AppDrawer from 'components/AppDrawer';\nimport AppContent from 'components/AppContent';\nimport TodoList from 'components/TodoList'\n\nimport 'App.scss';\n\nexport default function App() {\n  const [lists, setLists] = useState([]);\n\n  useEffect(() => {\n    get('lists')().then(setLists);\n  }, []);\n\n  return (\n    <DBContext.Provider value={{ lists, get }}>\n      <div className=\"app\">\n        <AppDrawer \n          lists={lists}\n        />\n\n        <AppContent>\n        <Switch>\n          <Route path=\"/todos/:listId\" component={TodoList}/>\n          <Route path=\"/:listId\" component={TodoList}/>\n        </Switch>\n        </AppContent>\n      </div>\n    </DBContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'index.scss';\nimport App from 'App.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}