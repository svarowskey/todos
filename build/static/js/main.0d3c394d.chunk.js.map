{"version":3,"sources":["firebase.js","api.js","hooks/api.js","components/AppDrawer/index.jsx","components/AppContent/index.jsx","components/TodoListItem/index.jsx","components/TodoList/index.jsx","components/TodoForm/index.jsx","pages/TodoList.jsx","App.jsx","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","getLists","collection","get","then","snapshot","docs","map","doc","id","data","catch","error","console","log","useApi","useState","todos","setTodos","lists","setLists","useEffect","api","actions","getListTodos","listId","where","createTodo","add","completed","docRef","todo","updateTodo","todoId","update","t","deleteTodo","delete","filter","useStyles","makeStyles","theme","createStyles","drawer","breakpoints","up","width","flexShrink","toolbar","mixins","AppDrawer","props","classes","className","Divider","item","component","NavLink","to","key","onClick","clickFunc","title","AppContent","TodoListItem","onUpdate","onDelete","checked","onChange","e","a","TodoList","list","variant","TodoForm","onSubmit","setTitle","focusClass","setFocusClass","textInput","React","createRef","event","preventDefault","ref","label","value","target","onFocus","onBlur","type","fullWidth","TodoListPage","match","params","find","root","display","appBar","marginLeft","menuButton","marginRight","spacing","drawerPaper","content","flexGrow","padding","App","window","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","edge","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","path","from","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d3c394d.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAlCUEfDYTdnaYoOtIQ-o8cU0bSigjWk1k\",\r\n    authDomain: \"react-todo-4649a.firebaseapp.com\",\r\n    databaseURL: \"https://react-todo-4649a.firebaseio.com\",\r\n    projectId: \"react-todo-4649a\",\r\n    storageBucket: \"react-todo-4649a.appspot.com\",\r\n    messagingSenderId: \"930484674768\",\r\n    appId: \"1:930484674768:web:1540fda55156b6052c3ed5\"\r\n  };\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nexport { db };\r\n","import { db } from './firebase';\r\n\r\nexport function getLists() {\r\n    return db.collection('lists')\r\n    .get()\r\n    .then(snapshot => {\r\n        const items = snapshot.docs.map(doc => (\r\n        {\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n\r\n        return items;\r\n    })\r\n    .catch(error => {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n}\r\n\r\nexport function getListTodos(listId) {\r\n    return db.collection('todos')\r\n    .where('listId', '==', listId)\r\n    .get()\r\n    .then(snapshot => {\r\n        const items = snapshot.docs.map(doc => (\r\n        {\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }));\r\n\r\n        return items;\r\n    })\r\n    .catch(error => {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n}\r\n\r\nexport function createTodo(data) {\r\n    return db.collection('todos').add({\r\n        ...data,\r\n        completed: false\r\n    })\r\n    .then(docRef => docRef.get())\r\n    .then(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n    }));\r\n}\r\n\r\nexport function updateTodo(todoId, data) {\r\n    return db.collection('todos').doc(todoId).update(data);\r\n}\r\n\r\nexport function deleteTodo(todoId) {\r\n    return db.collection('todos').doc(todoId).delete()\r\n        .then(() => todoId);\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport * as api from 'api';\r\n\r\nexport default function useApi() {\r\n    const [todos, setTodos] = useState([]);\r\n    const [lists, setLists] = useState([]);\r\n\r\n    useEffect(() => {\r\n        api.getLists().then(setLists);\r\n    }, []);\r\n\r\n    function getLists() {\r\n        return api.getLists()\r\n        .then(setLists);\r\n    }\r\n\r\n    function getListTodos(listId) {\r\n        return api.getListTodos(listId)\r\n        .then(setTodos);\r\n    }\r\n\r\n    function createTodo(data) {\r\n        return api.createTodo(data)\r\n        .then(todo => setTodos([...todos, todo]));\r\n    }\r\n\r\n    function updateTodo(todoId, data) {\r\n        return api.updateTodo(todoId, data)\r\n            .then(data => {\r\n                setTodos([...todos.map(t => t.id !==\r\n                    todoId ? ({ ...t, ...data, }) : t)]);\r\n            });\r\n        // console.log(data);\r\n    }\r\n\r\n    function deleteTodo(todoId) {\r\n        return api.deleteTodo(todoId)\r\n        .then(todoId => {\r\n            setTodos([...todos.filter(t => t.id !== todoId)])\r\n        });\r\n    }\r\n\r\n    return {\r\n        data: {\r\n            lists,\r\n            todos,\r\n        },\r\n        actions: {\r\n            getLists,\r\n            getListTodos,\r\n            createTodo,\r\n            updateTodo,\r\n            deleteTodo,\r\n        }\r\n    };\r\n}\r\n","import './index.scss'\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { \r\n    Icon,\r\n    List, ListItem, ListItemGraphic, ListItemText ,\r\n    ListGroup\r\n} from 'mdc-react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport {Divider} from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        drawer: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        // necessary for content to be below app bar\r\n        toolbar: theme.mixins.toolbar,\r\n    }),\r\n);\r\n\r\nexport default function AppDrawer(props) {\r\n    const classes = useStyles();\r\n    return(\r\n        <div>\r\n            <div className={classes.toolbar}>React Todo</div>\r\n            <Divider />\r\n            <ListGroup>\r\n                <List>\r\n                    {props.lists.map(item=>\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={item.id}\r\n                            key={item.id}\r\n                            onClick={props.clickFunc}\r\n                        >\r\n                            <ListItemGraphic>\r\n                                <Icon>{ item.title === 'Магазин' ? 'shopping_cart' : 'list' }</Icon>\r\n                            </ListItemGraphic>\r\n\r\n                            <ListItemText>\r\n                                { item.title }\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                    )}\r\n                </List>\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport 'components/AppContent/index.scss';\r\n\r\nexport default function AppContent({ ...props }) {\r\n    return(\r\n        <main id=\"app-content\" {...props} />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Checkbox, Icon, IconButton,\r\n    ListItem, ListItemGraphic, ListItemText, ListItemMeta\r\n} from 'mdc-react';\r\n\r\nimport 'components/TodoListItem/index.scss';\r\n\r\nexport default function TodoListItem({\r\n    todo, \r\n    onUpdate,\r\n    onDelete\r\n }) {\r\n    function handleChange(completed, e, a) {\r\n        onUpdate(todo.id, {\r\n            ...todo,\r\n            completed: e,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ListItem className=\"todo-list-item\">\r\n            <ListItemGraphic>\r\n                <Checkbox \r\n                    checked={todo.completed}\r\n                    onChange={handleChange}\r\n                />\r\n            </ListItemGraphic>\r\n\r\n            <ListItemText>{todo.title}</ListItemText>\r\n\r\n            <ListItemMeta>\r\n                <IconButton onClick={() => onDelete(todo.id)}>\r\n                    <Icon>delete</Icon>\r\n                </IconButton>\r\n            </ListItemMeta>\r\n        </ListItem>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    List, Typography\r\n} from 'mdc-react';\r\n\r\nimport TodoListItem from 'components/TodoListItem';\r\nimport 'components/TodoList/index.scss';\r\n\r\nexport default function TodoList({\r\n    list,\r\n    todos,\r\n    onUpdate,\r\n    onDelete,\r\n}) {\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <Typography className=\"todo-list__title\"\r\n            variant=\"headline4\">{list.title}</Typography>\r\n            \r\n            <List className=\"todo-list\">\r\n                {todos.map(todo =>\r\n                    <TodoListItem\r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        onUpdate={onUpdate}\r\n                        onDelete={onDelete}\r\n                    />\r\n                )}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n    List, ListItem,\r\n    TextField\r\n} from 'mdc-react';\r\n\r\nimport 'components/TodoForm/index.scss';\r\n\r\nexport default function TodoForm({ onSubmit }) {\r\n    const [title, setTitle] = useState('');\r\n    const [focusClass, setFocusClass] = useState('');\r\n    const textInput = React.createRef();\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        onSubmit(title);\r\n        setTitle('');\r\n    }\r\n\r\n    function handleFocus() {\r\n         if (focusClass === \"\") {\r\n             setFocusClass('mdc-list-item--focus');\r\n         } else {\r\n             setFocusClass('');\r\n         }\r\n    }\r\n\r\n    function handleBlur() {\r\n        if (focusClass === \"\") {\r\n            setFocusClass('mdc-list-item--focus');\r\n        } else {\r\n            setFocusClass('');\r\n        }\r\n   }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"todo-form\">\r\n            <List>\r\n                <ListItem className={focusClass}>\r\n                    <TextField \r\n                        ref={textInput}\r\n                        label=\"Что нужно купить...\"\r\n                        value={title}\r\n                        onChange={e => setTitle(e.target.value)}\r\n                        onFocus={handleFocus}\r\n                        onBlur={handleBlur}\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                </ListItem>\r\n            </List>\r\n        </form>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nimport useApi from 'hooks/api';\r\nimport TodoList from 'components/TodoList';\r\nimport TodoForm from 'components/TodoForm';\r\nimport 'pages/index.scss';\r\n\r\nexport default function TodoListPage({ match }) {\r\n    const { data: { lists, todos }, actions } = useApi();\r\n \r\n    useEffect(() => {\r\n        actions.getListTodos(match.params.listId);\r\n    }, [actions, match.params.listId]);\r\n    \r\n    function handleSubmit(title) {\r\n        actions.createTodo({\r\n            title,\r\n            listId: list.id\r\n        });\r\n    }\r\n\r\n    function handleDelete(todoId) {\r\n        actions.deleteTodo(todoId);\r\n    }\r\n\r\n    function handleUpdate(todoId, data) {\r\n        actions.updateTodo(todoId, data);\r\n    }\r\n\r\n    const list = lists.find(list => list.id === match.params.listId);\r\n\r\n    if (typeof list !== 'object') return \"\";\r\n\r\n    return (\r\n        <div id=\"todo-list-page\" className=\"page\">\r\n            <TodoList \r\n                list={list}\r\n                todos={todos}\r\n                onUpdate={handleUpdate}\r\n                onDelete={handleDelete}\r\n            />\r\n\r\n            <TodoForm \r\n                onSubmit={handleSubmit}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport useApi from 'hooks/api';\nimport AppDrawer from 'components/AppDrawer';\nimport AppContent from 'components/AppContent';\nimport TodoList from 'pages/TodoList'\nimport 'App.scss';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n    }),\n);\n\ninterface Props {\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window?: () => Window;\n}\n\nexport default function App(props: Props) {\n  const { data: { lists } } = useApi();\n\n    const { window } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n      <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position='fixed' className={classes.appBar}>\n              <Toolbar>\n                  <IconButton\n                      color='inherit'\n                      aria-label='open drawer'\n                      edge='start'\n                      onClick={handleDrawerToggle}\n                      className={classes.menuButton}\n                  >\n                      <MenuIcon />\n                  </IconButton>\n              </Toolbar>\n          </AppBar>\n          <nav className={classes.drawer}>\n              <Hidden smUp implementation='css'>\n                  <Drawer\n                      container={container}\n                      variant='temporary'\n                      anchor={theme.direction === 'rt1' ? 'right' : 'left'}\n                      open={mobileOpen}\n                      onClose={handleDrawerToggle}\n                      classes={{paper: classes.drawerPaper}}\n                      ModalProps={{keepMounted: true}}\n                  >\n                      <AppDrawer\n                          lists={lists}\n                          clickFunc={handleDrawerToggle}\n                      />\n                  </Drawer>\n              </Hidden>\n              <Hidden xsDown implementation='css'>\n                  <Drawer\n                      classes={{\n                          paper: classes.drawerPaper,\n                      }}\n                      variant='permanent'\n                      open\n                  >\n                      <AppDrawer\n                          lists={lists}\n                      />\n                  </Drawer>\n              </Hidden>\n          </nav>\n          <main className={classes.content}>\n              <div className={classes.toolbar} />\n              <AppContent>\n                  <Switch>\n                      <Route path=\"/todos/:listId\" component={TodoList}/>\n                      <Route path=\"/:listId\" component={TodoList}/>\n                      <Redirect from=\"*\" to=\"/\" />\n                  </Switch>\n              </AppContent>\n          </main>\n      </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'index.scss';\nimport App from 'App.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}